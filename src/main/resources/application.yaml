server:
  port: ${SERVER_PORT}

security:
  oauth2:
    resource:
      filter-order: 3
  signing-key: ${OUAUTH_SIGNING_KEY}
  encoding-strength: ${OAUTH_ENCODING_STRENGTH}
  security-realm: ${OAUTH_SECURITY_REALM}
  jwt:
    client-id: ${OAUTH_CLIENT_ID}
    client-secret: ${OAUTH_SECRET}
    scope-read: read
    scope-write: write
    resource-ids: ${OAUTH_RESOURCE_IDS}
    access_token_validity_in_seconds: ${OATUH_ACCESS_TOKEN_TIMEOUT}
    refresh_token_validity_in_seconds: ${OAUTH_REFRESH_TOKEN_TIMEOUT}
spring:
  data:
    mongodb:
      host: ${MONGODB_HOST}
      port: ${MONGODB_PORT}
      database: ${MONGODB_DATABASE}
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      authentication-database: ${MONGODB_AUTH_DATABASE}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
    producer:
      client-id: ${KAFKA_ACCESS_REQUEST_PRODUCER_CLIENT_ID}
    consumer:
      client-id: ${KAFKA_ACCESS_REQUEST_CONSUMER_CLIENT_ID}
      group-id: ${KAFKA_ACCESS_REQUEST_GROUP_ID}
      auto-offset-reset: earliest
    security:
      enabled: true
      protocol: ${KAFKA_SECURITY_PROTOCOL}
    properties:
      sasl:
        mechanism: ${KAFKA_SASL_MECHANISM}
        jaas:
          config: ${KAFKA_JAAS_CONFIG}